name: Node.js CI/CD

on:
  push:
    branches: [ prod ]

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.18.0'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Generate Prisma client
        run: npm run prisma:generate

      - name: Run lint
        run: npm run lint

      - name: Build the application
        run: npm run build

  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: build # This job depends on the `build` job

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        env:
          IMAGE_TAG: ${{ github.sha }}
          ENV_NAME: ${{ github.ref == 'refs/heads/dev' && 'dev' || 'prod' }}
        run: |
          docker build . -t ${{ secrets.DOCKER_USERNAME }}/new-be-komik-${ENV_NAME}:${IMAGE_TAG}
          docker push ${{ secrets.DOCKER_USERNAME }}/new-be-komik-${ENV_NAME}:${IMAGE_TAG}

  deploy:
    name: Deploy to VPS
    needs: docker
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            ENV_NAME=${{ github.ref == 'refs/heads/dev' && 'dev' || 'prod' }}
            IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/new-be-komik-${ENV_NAME}:${{ github.sha }}
            
            # Pull image terbaru
            docker pull $IMAGE_NAME
            
            # Stop dan remove container lama
            docker stop new-be-komik-${ENV_NAME} || true
            docker rm new-be-komik-${ENV_NAME} || true
            
            # Run container baru
            docker run -d --name new-be-komik-${ENV_NAME} -p 8093:8093 -v /root/new-be-komik-${ENV_NAME}/.env:/home/node/app/.env $IMAGE_NAME
            
            # Jalankan migrasi Prisma
            docker exec new-be-komik-${ENV_NAME} npx prisma generate
            docker exec new-be-komik-${ENV_NAME} npx prisma migrate deploy
            
            # Membersihkan image yang tidak diperlukan
            docker image prune -a -f
